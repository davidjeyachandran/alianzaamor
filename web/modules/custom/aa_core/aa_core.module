<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_page_attachments().
 */
function aa_core_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'aa_core/general';
}

/**
 * @file
 * Customization for user login, registration and more.
 */

/**
 * Implements hook_form_alter().
 */
function aa_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'user_register_form') {
    $form['account']['mail']['#description'] = t("Una dirección de correo electrónico válida.");
    $form['account']['name']['#description'] = t("La Cédula de identidad para Venezolanos o DNI para Peruanos. Por favor SIN letras o puntos");
    $form['account']['pass']['#required'] = FALSE;
    $form['account']['pass']['#access'] = FALSE;
  }

  if ($form_id === 'user_login_form') {

    $staff = \Drupal::request()->query->get('staff');
    // All Venezolans will have to just log in with their
    // "Cédula de Identidad o DNI" as the password.
    if (!$staff) {

      $form['pass']['#required'] = FALSE;
      $form['pass']['#access'] = FALSE;
      array_unshift($form['#validate'], 'aa_core_user_login_validate_pass');

      // Disable cache if query argument is ?staff
      $form['#cache']['contexts'][] = 'url.query_args:staff';
    }
  }

  if($form_id === 'user_form') {
    $account = \Drupal::service('current_route_match')->getParameter('user');

    if (!is_staff_user($account)) {
      // Show username field but hide password and email field.
      $form['account']['name']['#access'] = TRUE;
      $form['account']['pass']['#access'] = FALSE;
      $form['account']['current_pass']['#access'] = FALSE;
      $form['account']['mail']['#access'] = FALSE;
      $form['account']['name']['#description'] = t("UNICAMENTE la Cédula de identidad para Venezolanos - no su Carnet de Extranjeria, PTP, ni su pasaporte - o DNI para Peruanos. Por favor SIN letras o puntos.");
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function aa_core_user_insert(UserInterface $user) {
  // Assign "Cédula de Identidad o DNI" as the password.
  if (!is_staff_user($user)) {
    $user->pass->value = $user->label();
    $user->save();
  }
}

/**
 * Valitation callback for aa_core_form_alter().
 */
function aa_core_user_login_validate_pass(array $form, FormStateInterface $form_state) {
  $name = $form_state->getValue('name');

  // Fix for users: sets password to username is user is not staff.
  // @TODO: replace in future with more robust functionality.
  $users = \Drupal::entityTypeManager()
    ->getStorage('user')
    ->loadByProperties([
      'name' => $name,
    ]);

  $user = $users ? reset($users) : FALSE;
  if ($user && !is_staff_user($user)) {
    $user
      ->set('pass', $name)
      ->save();

    $form_state->setValue('pass', $name);
  }

}

/**
 * Redirect after login to the user edit page, if you don't have a special role.
 *
 * @param \Drupal\user\UserInterface $account
 *   The user object on which the operation was just performed.
 */
//function aa_core_user_login(UserInterface $account) {
//  if (!is_staff_user($account)) {
//    // Redirect to home since nothing to do.
//    $route = Url::fromRoute('entity.user.edit_form', [
//      'user' => $account->id(),
//    ]);
//    $response = new RedirectResponse($route->toString());
//    $response->send();
//  }
//}

/**
 * Callback to check if user belongs to staff.
 *
 * @param \Drupal\user\UserInterface $account
 *   The user object on which the operation was just performed.
 */
function is_staff_user(UserInterface $account) {
  return ($account->hasRole('equipo') ||
    $account->hasRole('misionero') ||
    $account->hasRole('administrator'));
}

/**
 * Implements hook_views_data().
 */
function aa_core_views_data() {
  $data['views']['table']['group'] = t('AA Global');
  $data['views']['table']['join'] = [
    // #glbal is a special flag which allows a table to appear all the time.
    '#global' => [],
  ];

  $data['views']['aa_user_checkin_views_field'] = [
    'title' => t('AA Action: User check-in'),
    'help' => t('Displays reject of check in for delivery user action.'),
    'field' => [
      'id' => 'aa_user_checkin_views_field',
    ],
  ];
  return $data;

}

/**
 * Implements hook_preprocess_region().
 */
function aa_core_preprocess_html(&$variables) {
  $account = \Drupal::service('current_route_match')->getParameter('user');

  if(is_array($account)) {
    if (
      $account->hasRole('authenticated') &&
      !$account->hasRole('equipo') &&
      !$account->hasRole('misionero') &&
      !$account->hasRole('administrator')
    ) {
      $variables['attributes']['class'][] = 'miembro';
    }
  }

  $variables['#attached']['library'][] = 'aa_core/general';
}
